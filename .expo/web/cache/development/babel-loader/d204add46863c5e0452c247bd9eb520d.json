{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar initialState = {\n  userLogged: null,\n  countries: []\n};\n\nvar citiesReducer = function citiesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_COUNTRIES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        countries: action.payload\n      });\n\n    case 'LOG_USER':\n      var storeData = function storeData() {\n        return _regeneratorRuntime.async(function storeData$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userLogged\", JSON.stringify({\n                  firstName: action.payload.firstName,\n                  img: action.payload.img\n                })));\n\n              case 3:\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', action.payload.token));\n\n              case 5:\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 7]], Promise);\n      };\n\n      storeData();\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userLogged: action.payload\n      });\n\n    case 'LOG_OUT':\n      AsyncStorage.clear();\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userLogged: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default citiesReducer;","map":{"version":3,"sources":["C:/Users/Craig133Mhz/Desktop/programacion/REACT NATIVE/MyTinerary Mobile/redux/reducers/loginReducer.js"],"names":["AsyncStorage","initialState","userLogged","countries","citiesReducer","state","action","type","payload","storeData","setItem","JSON","stringify","firstName","img","token","clear"],"mappings":";;;;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC,IADM;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAArB;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,6CACOF,KADP;AAEIF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAFtB;;AAIJ,SAAK,UAAL;AACI,UAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEJT,YAAY,CAACU,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAe;AAACC,kBAAAA,SAAS,EAAEP,MAAM,CAACE,OAAP,CAAeK,SAA3B;AAAsCC,kBAAAA,GAAG,EAAER,MAAM,CAACE,OAAP,CAAeM;AAA1D,iBAAf,CAAnC,CAFI;;AAAA;AAAA;AAAA,iDAGJd,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACE,OAAP,CAAeO,KAA7C,CAHI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AAQAN,MAAAA,SAAS;AACT,6CACOJ,KADP;AAEIH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFvB;;AAIJ,SAAK,SAAL;AACIR,MAAAA,YAAY,CAACgB,KAAb;AACA,6CACOX,KADP;AAEIH,QAAAA,UAAU,EAAE;AAFhB;;AAIJ;AACI,aAAOG,KAAP;AA3BR;AA6BH,CA9BD;;AAgCA,eAAeD,aAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst initialState = {\r\n    userLogged:null,\r\n    countries: []\r\n}\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_COUNTRIES':\r\n            return {\r\n                ...state,\r\n                countries: action.payload          \r\n            }\r\n        case 'LOG_USER':\r\n            const storeData = async () => {\r\n                try {\r\n                    await AsyncStorage.setItem(\"userLogged\", JSON.stringify({firstName: action.payload.firstName, img: action.payload.img}))\r\n                    await AsyncStorage.setItem('token', action.payload.token)\r\n                } catch (e) {\r\n                  // saving error\r\n                }\r\n              }\r\n            storeData()            \r\n            return {\r\n                ...state,\r\n                userLogged: action.payload         \r\n            }\r\n        case 'LOG_OUT':\r\n            AsyncStorage.clear()\r\n            return {\r\n                ...state,\r\n                userLogged: null        \r\n            }              \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default citiesReducer"]},"metadata":{},"sourceType":"module"}