{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  filteredCities: [],\n  cityiesSpreaded: [],\n  city: [],\n  success: true\n};\n\nvar citiesReducer = function citiesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_CITIES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filteredCities: action.payload.respuesta,\n        citiesSpreaded: action.payload.respuesta\n      });\n\n    case 'FIND_CITY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filteredCities: state.citiesSpreaded.filter(function (city) {\n          return city.name.toLowerCase().indexOf(action.payload.trim().toLowerCase()) === 0;\n        })\n      });\n\n    case 'FETCH_SINGLE_CITY':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        city: action.payload.respuesta,\n        success: action.payload.success\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default citiesReducer;","map":{"version":3,"sources":["C:/Users/Craig133Mhz/Desktop/programacion/REACT NATIVE/MyTinerary Mobile/redux/reducers/citiesReducer.js"],"names":["initialState","filteredCities","cityiesSpreaded","city","success","citiesReducer","state","action","type","payload","respuesta","citiesSpreaded","filter","name","toLowerCase","indexOf","trim"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,eAAe,EAAE,EAFA;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,OAAO,EAAE;AAJQ,CAArB;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,6CACOF,KADP;AAEIL,QAAAA,cAAc,EAAEM,MAAM,CAACE,OAAP,CAAeC,SAFnC;AAGIC,QAAAA,cAAc,EAAEJ,MAAM,CAACE,OAAP,CAAeC;AAHnC;;AAKJ,SAAK,WAAL;AACI,6CACOJ,KADP;AAEIL,QAAAA,cAAc,EAAEK,KAAK,CAACK,cAAN,CAAqBC,MAArB,CAA4B,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACU,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgCR,MAAM,CAACE,OAAP,CAAeO,IAAf,GAAsBF,WAAtB,EAAhC,MAAwE,CAA5E;AAAA,SAAhC;AAFpB;;AAIJ,SAAK,mBAAL;AACI,6CACOR,KADP;AAEIH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeC,SAFzB;AAGIN,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAH5B;;AAKJ;AACI,aAAOE,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,aAAf","sourcesContent":["const initialState = {\r\n    filteredCities: [],\r\n    cityiesSpreaded: [],\r\n    city: [],\r\n    success: true\r\n}\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_CITIES':\r\n            return {\r\n                ...state,\r\n                filteredCities: action.payload.respuesta,   \r\n                citiesSpreaded: action.payload.respuesta            \r\n            }\r\n        case 'FIND_CITY':\r\n            return {\r\n                ...state,\r\n                filteredCities: state.citiesSpreaded.filter(city => city.name.toLowerCase().indexOf(action.payload.trim().toLowerCase())=== 0 )           \r\n            }\r\n        case 'FETCH_SINGLE_CITY':\r\n            return {\r\n                ...state,\r\n                city: action.payload.respuesta,\r\n                success: action.payload.success            \r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default citiesReducer"]},"metadata":{},"sourceType":"module"}