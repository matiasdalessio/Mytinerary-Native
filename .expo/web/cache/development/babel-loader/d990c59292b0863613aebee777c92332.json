{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport SweetAlert from 'react-native-sweet-alert';\nvar loginActions = {\n  fetchCountries: function fetchCountries(props) {\n    return function (dispatch, getState) {\n      axios.get(\"https://restcountries.eu/rest/v2/all\").then(function (response) {\n        return dispatch({\n          type: 'FETCH_COUNTRIES',\n          payload: response.data\n        });\n      });\n    };\n  },\n  logUser: function logUser(userInfo) {\n    return function _callee(dispatch, getState) {\n      var respuesta;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.post('https://mytinerary-dalessio.herokuapp.com/api/user/login', userInfo));\n\n            case 3:\n              respuesta = _context.sent;\n\n              if (respuesta.data.success) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", respuesta.data);\n\n            case 6:\n              dispatch({\n                type: \"LOG_USER\",\n                payload: respuesta.data.respuesta\n              });\n              return _context.abrupt(\"return\", \"Welcome back, \" + respuesta.data.respuesta.firstName + \"!\");\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n  },\n  newUser: function newUser(userInfo) {\n    return function _callee2(dispatch, getState) {\n      var respuesta;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.post('https://mytinerary-dalessio.herokuapp.com/api/user/signup', userInfo));\n\n            case 3:\n              respuesta = _context2.sent;\n\n              if (respuesta.data.success) {\n                _context2.next = 6;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", respuesta.data.error);\n\n            case 6:\n              dispatch({\n                type: \"LOG_USER\",\n                payload: respuesta.data.respuesta\n              });\n              return _context2.abrupt(\"return\", \"Welcome \" + respuesta.data.respuesta.firstName + \"!\");\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n  },\n  forcedLoginByLS: function forcedLoginByLS(userLS) {\n    return function _callee3(dispatch, getState) {\n      var respuesta;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(axios.get('https://mytinerary-dalessio.herokuapp.com/api/user/loginLS', {\n                headers: {\n                  'Authorization': 'Bearer ' + userLS.token\n                }\n              }));\n\n            case 3:\n              respuesta = _context3.sent;\n              dispatch({\n                type: 'LOG_USER',\n                payload: _objectSpread(_objectSpread({}, respuesta.data.respuesta), {}, {\n                  token: userLS.token\n                })\n              });\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: 'LOG_OUT',\n                payload: null\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n  },\n  removeUserInfo: function removeUserInfo() {\n    return function (dispatch, getState) {\n      dispatch({\n        type: 'LOG_OUT'\n      });\n    };\n  }\n};\nexport default loginActions;","map":{"version":3,"sources":["C:/Users/Craig133Mhz/Desktop/programacion/REACT NATIVE/MyTinerary Mobile/redux/actions/loginActions.js"],"names":["axios","SweetAlert","loginActions","fetchCountries","props","dispatch","getState","get","then","response","type","payload","data","logUser","userInfo","post","respuesta","success","firstName","newUser","error","forcedLoginByLS","userLS","headers","token","removeUserInfo"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport SweetAlert from 'react-native-sweet-alert';\r\n\r\nconst loginActions = {\r\n    fetchCountries: (props) => {\r\n        return (dispatch, getState) => {\r\n            axios.get(`https://restcountries.eu/rest/v2/all`)\r\n            .then(response => dispatch({type: 'FETCH_COUNTRIES', payload: response.data}))\r\n            // .catch(error => props.push('/serverdown')) \r\n        }\r\n    },\r\n    logUser: (userInfo) => {\r\n        return async (dispatch, getState) => {\r\n           try {\r\n                const respuesta = await axios.post('https://mytinerary-dalessio.herokuapp.com/api/user/login', userInfo)\r\n                if (!respuesta.data.success) {\r\n                    return respuesta.data\r\n                }\r\n                dispatch({\r\n                    type: \"LOG_USER\",\r\n                    payload: respuesta.data.respuesta\r\n                    \r\n                })\r\n                return `Welcome back, ${respuesta.data.respuesta.firstName}!`\r\n            }catch(error) {\r\n                // return swal(\"Failed to try to connect with server\", \"Please try again in a few minutes\", \"error\")\r\n            } \r\n        }\r\n    },\r\n    newUser: (userInfo) => {\r\n        return async (dispatch, getState) => {\r\n           try {\r\n                const respuesta = await axios.post('https://mytinerary-dalessio.herokuapp.com/api/user/signup', userInfo)\r\n                if (!respuesta.data.success) {\r\n                    return respuesta.data.error\r\n                }\r\n                dispatch({\r\n                    type: \"LOG_USER\",\r\n                    payload: respuesta.data.respuesta\r\n                    \r\n                })\r\n                return `Welcome ${respuesta.data.respuesta.firstName}!`               \r\n            }catch(error) {\r\n                // return swal(\"Failed to try to connect with server\", \"Please try again in a few minutes\", \"error\")\r\n            } \r\n        }\r\n    },\r\n    forcedLoginByLS: (userLS) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const respuesta = await axios.get('https://mytinerary-dalessio.herokuapp.com/api/user/loginLS', {\r\n                headers: {\r\n                    'Authorization': 'Bearer '+userLS.token\r\n                }\r\n            })\r\n                dispatch({type: 'LOG_USER', payload: {\r\n                    ...respuesta.data.respuesta,\r\n                    token: userLS.token\r\n                }})\r\n            } catch(error) {\r\n                // if (!error.response) {\r\n                //     return swal(\"Failed to try to connect with server\", \"Please try again in a few minutes\", \"error\")\r\n                // } else if (error.response.status && error.response.status > 399 && error.response.status < 499) {\r\n                //     // swal(\"Invalid Token\", \"Please Log in again\", \"error\")\r\n                    dispatch({type: 'LOG_OUT', payload: null})\r\n                // } \r\n            }           \r\n        }\r\n    },\r\n    removeUserInfo: () => {\r\n        return (dispatch, getState) => {\r\n            dispatch({type: 'LOG_OUT'})\r\n        }\r\n    },\r\n    \r\n}\r\n\r\nexport default loginActions"]},"metadata":{},"sourceType":"module"}