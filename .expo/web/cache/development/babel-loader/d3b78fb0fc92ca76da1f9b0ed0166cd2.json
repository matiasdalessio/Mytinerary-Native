{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Craig133Mhz\\\\Desktop\\\\programacion\\\\REACT NATIVE\\\\MyTinerary Mobile\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Drawer from \"./routes/Drawer\";\nimport mainReducer from \"./redux/reducers/mainReducer\";\nimport thunk from 'redux-thunk';\nimport GoogleLogin from \"./screens/GoogleLogin\";\nimport { StatusBar } from 'expo-status-bar';\nvar reduxStore = createStore(mainReducer, applyMiddleware(thunk));\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: reduxStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      }, React.createElement(StatusBar, {\n        animated: true,\n        backgroundColor: \"#61dafb\",\n        barStyle: \"dark-content\",\n        hidden: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }), React.createElement(Drawer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Craig133Mhz/Desktop/programacion/REACT NATIVE/MyTinerary Mobile/App.js"],"names":["React","Provider","applyMiddleware","createStore","NavigationContainer","Drawer","mainReducer","thunk","GoogleLogin","StatusBar","reduxStore","App","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,IAAMC,UAAU,GAAGP,WAAW,CAACG,WAAD,EAAcJ,eAAe,CAACK,KAAD,CAA7B,CAA9B;;IAGMI,G;;;;;;;;;;;;;WAEJ,kBAAQ;AAEJ,aACM,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAE,IADZ;AAEE,QAAA,eAAe,EAAC,SAFlB;AAGE,QAAA,QAAQ,EAAE,cAHZ;AAIE,QAAA,MAAM,EAAE,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CADN;AAaH;;;;EAjBeV,KAAK,CAACY,S;;AAoBxB,eAAgBD,GAAhB","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React from 'react';\r\nimport {Provider} from 'react-redux'\r\nimport {applyMiddleware, createStore} from 'redux'\r\nimport {NavigationContainer} from '@react-navigation/native'\r\nimport Drawer from './routes/Drawer';\r\nimport mainReducer from './redux/reducers/mainReducer'\r\nimport thunk from 'redux-thunk';\r\nimport GoogleLogin from './screens/GoogleLogin'\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\nconst reduxStore = createStore(mainReducer, applyMiddleware(thunk))\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n  render(){\r\n    \r\n      return (\r\n            <Provider store={reduxStore} >\r\n              <NavigationContainer>      \r\n                <StatusBar\r\n                  animated={true}\r\n                  backgroundColor=\"#61dafb\"\r\n                  barStyle={\"dark-content\"}\r\n                  hidden={true} />\r\n                <Drawer />\r\n                {/* <GoogleLogin/> */}\r\n              </NavigationContainer>\r\n            </Provider>\r\n        );\r\n  }\r\n}\r\n\r\nexport default (App)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}