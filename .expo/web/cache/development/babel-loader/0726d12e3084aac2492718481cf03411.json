{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Craig133Mhz\\\\Desktop\\\\programacion\\\\REACT NATIVE\\\\MyTinerary Mobile\\\\routes\\\\Drawer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport React from 'react';\nimport { HomeStack, CitiesStack, LogInStack, SignUpStack } from \"./Stacker\";\nimport { connect } from 'react-redux';\nimport loginActions from \"../redux/actions/loginActions\";\nimport DrawerContent from \"./DrawerContent\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar drawer = createDrawerNavigator();\n\nvar Drawer = function (_React$Component) {\n  _inherits(Drawer, _React$Component);\n\n  var _super = _createSuper(Drawer);\n\n  function Drawer() {\n    _classCallCheck(this, Drawer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Drawer, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(drawer.Navigator, {\n        drawerContent: function drawerContent(props) {\n          return React.createElement(DrawerContent, _extends({}, props, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 54\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(drawer.Screen, {\n        name: \"Home\",\n        component: HomeStack,\n        options: {\n          title: 'Home'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(drawer.Screen, {\n        name: \"Cities\",\n        component: CitiesStack,\n        options: {\n          title: 'Cities'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }), !this.props.userLogged && React.createElement(drawer.Screen, {\n        name: \"Log In\",\n        component: LogInStack,\n        options: {\n          title: 'Log In'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 43\n        }\n      }), !this.props.userLogged && React.createElement(drawer.Screen, {\n        name: \"Sign Up\",\n        component: SignUpStack,\n        options: {\n          title: 'Sign Up'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 43\n        }\n      })));\n    }\n  }]);\n\n  return Drawer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userLogged: state.loginReducer.userLogged\n  };\n};\n\nvar mapDispatchToProps = {\n  forcedLoginByLS: loginActions.forcedLoginByLS,\n  removeUserInfo: loginActions.removeUserInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Drawer);","map":{"version":3,"sources":["C:/Users/Craig133Mhz/Desktop/programacion/REACT NATIVE/MyTinerary Mobile/routes/Drawer.js"],"names":["createDrawerNavigator","React","HomeStack","CitiesStack","LogInStack","SignUpStack","connect","loginActions","DrawerContent","AsyncStorage","drawer","Drawer","props","title","userLogged","Component","mapStateToProps","state","loginReducer","mapDispatchToProps","forcedLoginByLS","removeUserInfo"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,qBAAR,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,WAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,IAAMC,MAAM,GAAGV,qBAAqB,EAApC;;IAEMW,M;;;;;;;;;;;;;WAsBF,kBAAS;AAAA;;AACL,aACI,0CACA,oBAAC,MAAD,CAAQ,SAAR;AAAkB,QAAA,aAAa,EAAE,uBAAAC,KAAK;AAAA,iBAAG,oBAAC,aAAD,eAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,SAAS,EAAEV,SAAtC;AAAiD,QAAA,OAAO,EAAE;AACtDW,UAAAA,KAAK,EAAE;AAD+C,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,QAApB;AAA6B,QAAA,SAAS,EAAEV,WAAxC;AAAqD,QAAA,OAAO,EAAE;AAC1DU,UAAAA,KAAK,EAAE;AADmD,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAOK,CAAC,KAAKD,KAAL,CAAWE,UAAZ,IAAyB,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,QAApB;AAA6B,QAAA,SAAS,EAAEV,UAAxC;AAAoD,QAAA,OAAO,EAAE;AACnFS,UAAAA,KAAK,EAAE;AAD4E,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAP9B,EAUK,CAAC,KAAKD,KAAL,CAAWE,UAAZ,IAAyB,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,SAApB;AAA8B,QAAA,SAAS,EAAET,WAAzC;AAAsD,QAAA,OAAO,EAAE;AACrFQ,UAAAA,KAAK,EAAE;AAD8E,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAV9B,CADA,CADJ;AAkBH;;;;EAzCgBZ,KAAK,CAACc,S;;AA4C3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACHH,IAAAA,UAAU,EAAEG,KAAK,CAACC,YAAN,CAAmBJ;AAD5B,GAAP;AAGD,CAJD;;AAKA,IAAMK,kBAAkB,GAAG;AACzBC,EAAAA,eAAe,EAAIb,YAAY,CAACa,eADP;AAEzBC,EAAAA,cAAc,EAAEd,YAAY,CAACc;AAFJ,CAA3B;AAKA,eAAef,OAAO,CAACU,eAAD,EAAiBG,kBAAjB,CAAP,CAA6CR,MAA7C,CAAf","sourcesContent":["import {createDrawerNavigator} from '@react-navigation/drawer'\r\nimport React from 'react'\r\nimport {HomeStack, CitiesStack, LogInStack, SignUpStack} from './Stacker'\r\nimport { connect } from 'react-redux';\r\nimport loginActions from '../redux/actions/loginActions';\r\nimport DrawerContent from './DrawerContent'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nconst drawer = createDrawerNavigator()\r\n\r\nclass Drawer extends React.Component{\r\n\r\n    // componentDidMount() {\r\n    //     if (!this.props.userLogged ) { \r\n    //         const getData = async () => {\r\n    //             try {\r\n    //                 const jsonValue = await AsyncStorage.getItem('userLogged')\r\n    //                 const userData = JSON.parse(jsonValue) \r\n    //                 let userLS= {\r\n    //                 token: await AsyncStorage.getItem('token'),\r\n    //                 ...userData\r\n    //                 }\r\n    //                 this.props.forcedLoginByLS(userLS)\r\n    //             } catch(e) {\r\n    //               console.log(e)\r\n    //             }\r\n    //         }\r\n    //         getData()            \r\n    //     }\r\n    // } \r\n\r\n    \r\n    render (){\r\n        return (\r\n            <>\r\n            <drawer.Navigator drawerContent={props =><DrawerContent {...props}/>}>\r\n                <drawer.Screen name=\"Home\" component={HomeStack} options={{\r\n                    title: 'Home'\r\n                }} />\r\n                <drawer.Screen name=\"Cities\" component={CitiesStack} options={{\r\n                    title: 'Cities',\r\n                }}/>\r\n                {!this.props.userLogged &&<drawer.Screen name=\"Log In\" component={LogInStack} options={{\r\n                    title: 'Log In'\r\n                }} />}\r\n                {!this.props.userLogged &&<drawer.Screen name=\"Sign Up\" component={SignUpStack} options={{\r\n                    title: 'Sign Up'\r\n                }} />}\r\n            </drawer.Navigator>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      userLogged: state.loginReducer.userLogged\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  forcedLoginByLS :  loginActions.forcedLoginByLS,\r\n  removeUserInfo: loginActions.removeUserInfo\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Drawer)\r\n"]},"metadata":{},"sourceType":"module"}